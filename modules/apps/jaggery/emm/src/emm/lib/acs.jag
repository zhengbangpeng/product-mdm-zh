<%
/*
 * Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

/*
 @SSO-Related
 */
var dataConfig = require('/config/mdm-props.js').config();
var sso = require('/modules/sso.js').sso;
var constants = require('/modules/constants.js');
var carbonModule = require("carbon");
var log = new Log();
var apiWrapperUtil = require("/modules/api-wrapper-util.js").apiWrapperUtil;
var userModule = require("/modules/user.js").userModule;
var keyStoreParams = {
    keyStoreName: dataConfig.ssoConfiguration.keyStoreName,
    keyStorePassword: dataConfig.ssoConfiguration.keyStorePassword,
    identityAlias: dataConfig.ssoConfiguration.identityAlias
};
sso.configure(dataConfig.ssoConfiguration.issuer,
        dataConfig.ssoConfiguration.appName,
        keyStoreParams, dataConfig.ssoConfiguration.identityProviderURL);
sso.acs(
        function(loggedInUser, samlResponse) {
            var carbonUser = carbonModule.server.tenantUser(loggedInUser);
            session.put(constants.USER_SESSION_KEY, carbonUser);
            var username = carbonUser.username;
            if(log.isDebugEnabled()){
                log.debug("User logged in: "+username);
            }
            var permissions = userModule.getUIPermissions();
            if (permissions.VIEW_DASHBOARD){
                apiWrapperUtil.setupAccessTokenPair("saml", samlResponse);
                response.sendRedirect(dataConfig.appContext);
            }
        }, function() {
            if(log.isDebugEnabled()){
                log.debug("User logged out");
            }
            response.sendRedirect(dataConfig.appContext);
        }
);
%>