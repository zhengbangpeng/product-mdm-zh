<%
/*
 * Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

var uri = request.getRequestURI();
var uriMatcher = new URIMatcher(String(uri));

var log = new Log("api/user-api.jag");

var constants = require("/modules/constants.js");
var mdmProps = require('/config/mdm-props.js').config();
var userModule = require("/modules/user.js").userModule;
var deviceModule = require("/modules/device.js").deviceModule;
var utility = require("/modules/utility.js").utility;
var util = require("/modules/util.js").util;
var apiWrapperUtil = require("/modules/api-wrapper-util.js").apiWrapperUtil;

var result;

if (uriMatcher.match("/{context}/api/user/login/")) {
    username = request.getParameter("username");
    password = request.getParameter("password");
    username = util.decode(username);
    password = util.decode(password);
    try {
        userModule.login(username, password, function (user) {
            if (log.isDebugEnabled()) {
                log.debug("User Logged In : " + user);
            }
            utility.insertAppPermissions(userModule, "login");
            apiWrapperUtil.setupAccessTokenPair("password", {"username": username, "password": password});
            var permissions = userModule.getUIPermissions();
            if (permissions.VIEW_DASHBOARD) {
                response.sendRedirect(constants.WEB_APP_CONTEXT);
            } else {
                response.sendRedirect(constants.WEB_APP_CONTEXT + "/device-mgt");
            }
        }, function () {
            response.sendRedirect(mdmProps.appContext + "login?#auth-failed");
        });
    } catch (e) {
        log.error("Exception occurred while a user tried to login to MDM", e);
        response.sendRedirect(mdmProps.appContext + "login?#error");
    }
} else if (uriMatcher.match("/{context}/api/user/logout/")) {
    userModule.logout(function () {
        response.sendRedirect(mdmProps.appContext + "login");
    });
}
// returning the result.
if (result) {
    print(result);
}
%>
